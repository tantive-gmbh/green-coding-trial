name: HighLoad Test
author: Udo Nesshoever
version: 1
description: Test green measurement with personalized software

# We need an explicit networks part, as we do not auto-generate networks for containers
networks:
  highload-network:

services:
  # There is no container_name directive. All services keys act directly as container names
  highload-container-def:
    # If you build your file with docker compose in the example above this image name should be the one you have now locally
    image: highload:api
    container_name: highload-api
    # environment:
    #   - MADE_UP_VARIABLE=SomeValue
    # networks must be explicitly stated in each service
    networks:
      - highload-network

# services:
#   # There is no container_name directive. All services keys act directly as container names
#   highload-container-def:
#     # If you build your file with docker compose in the example above this image name should be the one you have now locally
#     image: ghcr.io/tantive-nessi/green-coding:highload
#     container_name: highload-console
#     environment:
#       - MADE_UP_VARIABLE=SomeValue
#     # networks must be explicitly stated in each service
#     networks:
#       - highload-network

flow:
  - name: Small-Stress
    container: highload-api
    commands:
      - type: console
        command: "curl -X 'POST' 'http://localhost/init?itemCount=200&taskCount=10' -H 'accept: text/plain' -d ''"
        note: Starting a little stress

compose-file:
  !include compose-api.yml
