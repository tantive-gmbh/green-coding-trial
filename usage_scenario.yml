name: HighLoad Test
author: Udo Nesshoever
version: 1
description: Test green measurement with personalized software

# We need an explicit networks part, as we do not auto-generate networks for containers
networks:
  highload-network:

services:
  highload-api-cont:
    build:
      context: .
      dockerfile: Dockerfile-api
    image: highload:api
    ports:
      - "80:80"

flow:
  - name: Stress Test 200-10
    container: highload-api-cont
    commands:
      - type: console
        command: curl -X 'POST' 'http://localhost/init?itemCount=200&taskCount=10' -H 'accept:text/plain' -d ''
        shell: bash
        note: 200 Items, 10 tasks
        log-stderr: True
        log-stdout: True
      - type: console
        command: curl -X 'POST' 'http://localhost/reset' -H 'accept:text/plain' -d ''
        shell: bash
        note: Reset
        log-stderr: True
        log-stdout: True
  - name: Stress Test 200-100
    container: highload-api-cont
    commands:
      - type: console
        command: curl -X 'POST' 'http://localhost/init?itemCount=200&taskCount=100' -H 'accept:text/plain' -d ''
        shell: bash
        note: 200 Items, 100 tasks
        log-stderr: True
        log-stdout: True
      - type: console
        command: curl -X 'POST' 'http://localhost/reset' -H 'accept:text/plain' -d ''
        shell: bash
        note: Reset again
        log-stderr: True
        log-stdout: True
  - name: Stress Test 2000-50
    container: highload-api-cont
    commands:
      - type: console
        command: curl -X 'POST' 'http://localhost/init?itemCount=2000&taskCount=50' -H 'accept:text/plain' -d ''
        shell: bash
        note: Heavy load with 2000 Items, 50 tasks
        log-stderr: True
        log-stdout: True
